extend type Mutation {
    createOrUpdateGroup(request: CreateOrUpdateGroupRequest, avatarFile: Upload): CreateOrUpdateGroupResponse
    deleteGroup(groupId: String!): DeleteGroupResponse
}

extend type Query {
    groups: GetOrSearchGroupsResponse
    searchGroupByName(name: String): GetOrSearchGroupsResponse
}
interface ResponseBase {
    code: Int
    message: String
}

type GetOrSearchGroupsResponse implements ResponseBase{
    code: Int
    message: String
    responseData: [Group]
}

type DeleteGroupResponse implements ResponseBase{
    code: Int
    message: String
}

type GroupProperties {
    status: GroupStatus
    avatar: Image
    background: Image
}

type Image {
    name: String
    type: ImageType
    url: String
}

type Group {
    id: ID
    name: String!
    groupProperties: GroupProperties
    admin: UserDto
    createdBy: UserDto
    createdDate: LocalDateTime
    modifiedDate: LocalDateTime
}

type CreateOrUpdateGroupResponse {
    code: Int
    message: String
    responseData: Group
}

input GroupPropertiesRequest {
    status: String
}

input CreateOrUpdateGroupRequest {
    id: String
    name: String
    groupProperties: GroupPropertiesRequest
}

enum GroupStatus {
    PUBLIC
    PRIVATE
}

enum ImageType {
    PNG
    JPEG
    JPG
}